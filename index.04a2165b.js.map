{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCYA,SAAS,EAAa,CAAG,CAAE,CAAW,MAIZ,EAHxB,MAIA,AAAI,AAAa,MAAb,CADoB,EAHA,EAAI,KAAK,CAAC,EAAY,CAAC,SAAS,CAI/C,CAAC,EAAE,CACH,CAAC,EAAM,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,IAGlC,MAAM,GAAS,EAAQ,CAAC,CAPjC,CAyBA,SAAS,EAAqB,CAAE,CAAE,CAAI,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAO,OAAQ,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAS,EACxD,EAAQ,SAAS,aAAa,CAAC,SAIrC,OAFA,EAAM,SAAS,CAAI,SAAiC,MAAA,CAAzB,EAAK,sBAAiC,MAAA,CAAb,EAAG,YAA4B,MAAA,CAAlB,EAAK,eAAoB,MAAA,CAAP,EAAO,MAEnF,CACT,CAEA,SAAS,EAAiB,CAAK,CAAE,CAAW,CAAE,CAAI,EAChD,IAAM,EAAM,SAAS,aAAa,CAAC,OAEnC,EAAI,SAAS,CAAC,GAAG,CAAC,eAAgB,GAElC,EAAI,SAAS,CAAI,qBAAoC,MAAA,CAAhB,EAAM,YAAsB,MAAA,CAAZ,EAAY,QACjE,SAAS,IAAI,CAAC,MAAM,CAAC,GAErB,WAAW,WAAM,OAAA,EAAI,MAAM,EAAI,EAAA,IACjC,CAEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction updateSortDirection(columnIndex) {\n    if (columnIndex === lastSortedColumn) sortDirection = -sortDirection;\n    else sortDirection = 1;\n    lastSortedColumn = columnIndex;\n}\nfunction getCellValue(row, columnIndex) {\n    return currencyToNumber(row.cells[columnIndex].innerText);\n}\nfunction currencyToNumber(value) {\n    if (value[0] === \"$\") return +value.slice(1).split(\",\").join(\"\");\n    return isNaN(value) ? value : +value;\n}\nfunction sortTable(columnIndex) {\n    var _table_tBodies_;\n    var rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    rows.sort(function(row1, row2) {\n        var value1 = getCellValue(row1, columnIndex);\n        var value2 = getCellValue(row2, columnIndex);\n        return typeof value1 === \"number\" ? (value1 - value2) * sortDirection : value1.toString().localeCompare(value2.toString()) * sortDirection;\n    });\n    (_table_tBodies_ = table.tBodies[0]).append.apply(_table_tBodies_, _to_consumable_array(rows));\n}\nfunction createInputWithLabel(id, text) {\n    var type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"text\", dataQa = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : id;\n    var label = document.createElement(\"label\");\n    label.innerHTML = \"<span>\".concat(text, '</span><input id=\"').concat(id, '\" type=\"').concat(type, '\" data-qa=\"').concat(dataQa, '\">');\n    return label;\n}\nfunction pushNotification(title, description, type) {\n    var div = document.createElement(\"div\");\n    div.classList.add(\"notification\", type);\n    div.innerHTML = '<h2 class=\"title\">'.concat(title, \"</h2><p>\").concat(description, \"</p>\");\n    document.body.append(div);\n    setTimeout(function() {\n        return div.remove();\n    }, 2000);\n}\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nvar tbody = table.querySelector(\"tbody\");\nvar sortDirection = 1;\nvar lastSortedColumn = -1;\nvar editingCell = null;\ntable.querySelector(\"thead\").addEventListener(\"click\", function(e) {\n    var header = e.target.closest(\"th\");\n    if (!header) return;\n    var index = _to_consumable_array(headers).indexOf(header);\n    updateSortDirection(index);\n    sortTable(index);\n});\ntbody.addEventListener(\"click\", function(e) {\n    var row = e.target.closest(\"tr\");\n    if (!row) return;\n    tbody.querySelectorAll(\"tr\").forEach(function(r) {\n        return r.classList.remove(\"active\");\n    });\n    row.classList.add(\"active\");\n});\ntbody.addEventListener(\"dblclick\", function(e) {\n    var cell = e.target.closest(\"td\");\n    if (!cell || editingCell) return;\n    editingCell = cell;\n    var initialValue = cell.innerText;\n    cell.innerHTML = \"\";\n    var input = document.createElement(\"input\");\n    input.classList.add(\"cell-input\");\n    input.value = \"\";\n    cell.appendChild(input);\n    input.focus();\n    input.addEventListener(\"blur\", function() {\n        var newValue = input.value.trim() || initialValue;\n        cell.innerText = newValue;\n        editingCell = null;\n    });\n    input.addEventListener(\"keypress\", function(event1) {\n        if (event1.key === \"Enter\") {\n            var newValue = input.value.trim() || initialValue;\n            cell.innerText = newValue;\n            editingCell = null;\n        }\n    });\n});\nvar newForm = document.createElement(\"form\");\nnewForm.className = \"new-employee-form\";\ntable.insertAdjacentElement(\"afterend\", newForm);\nvar selectLabel = document.createElement(\"label\");\nvar selectHintText = document.createElement(\"span\");\nvar select = document.createElement(\"select\");\nvar selectOptions = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nselectLabel.setAttribute(\"for\", \"office\");\nselectHintText.textContent = \"Office:\";\nselect.id = \"office\";\nselect.setAttribute(\"data-qa\", \"office\");\nselectOptions.forEach(function(city) {\n    var option = document.createElement(\"option\");\n    option.value = city;\n    option.textContent = city;\n    select.appendChild(option);\n});\nselectLabel.append(selectHintText);\nselectLabel.append(select);\nvar button = document.createElement(\"button\");\nbutton.textContent = \"Save to table\";\nbutton.type = \"submit\";\nnewForm.append(createInputWithLabel(\"name\", \"Name:\"));\nnewForm.append(createInputWithLabel(\"position\", \"Position:\"));\nnewForm.append(selectLabel);\nnewForm.append(createInputWithLabel(\"age\", \"Age:\", \"number\"));\nnewForm.append(createInputWithLabel(\"salary\", \"Salary:\", \"number\"));\nnewForm.append(button);\nnewForm.addEventListener(\"submit\", function(event2) {\n    event2.preventDefault();\n    var employeeInfo = {\n        name: document.getElementById(\"name\").value.trim(),\n        position: document.getElementById(\"position\").value.trim(),\n        office: document.getElementById(\"office\").value.trim(),\n        age: +document.getElementById(\"age\").value.trim(),\n        salary: +document.getElementById(\"salary\").value.trim()\n    };\n    if (Object.values(employeeInfo).some(function(value) {\n        return !value;\n    })) {\n        pushNotification(\"Warning\", \"All form fields must be filled in!\", \"warning\");\n        return;\n    }\n    if (employeeInfo.name.length < 4) {\n        pushNotification(\"Error\", \"Name must be at least 4 characters long\", \"error\");\n        return;\n    }\n    if (employeeInfo.age < 18 || employeeInfo.age > 90) {\n        pushNotification(\"Error\", \"Age must be between 18 and 90\", \"error\");\n        return;\n    }\n    var formattedSalary = \"$\".concat(employeeInfo.salary.toLocaleString(\"en-US\"));\n    var newRow = tbody.insertRow();\n    newRow.insertCell().textContent = employeeInfo.name;\n    newRow.insertCell().textContent = employeeInfo.position;\n    newRow.insertCell().textContent = employeeInfo.office;\n    newRow.insertCell().textContent = employeeInfo.age;\n    newRow.insertCell().textContent = formattedSalary;\n    pushNotification(\"Success\", \"You have successfully added an employee to the table\", \"success\");\n    newForm.reset();\n});\n\n//# sourceMappingURL=index.04a2165b.js.map\n","'use strict';\n\nfunction updateSortDirection(columnIndex) {\n  if (columnIndex === lastSortedColumn) {\n    sortDirection = -sortDirection;\n  } else {\n    sortDirection = 1;\n  }\n\n  lastSortedColumn = columnIndex;\n}\n\nfunction getCellValue(row, columnIndex) {\n  return currencyToNumber(row.cells[columnIndex].innerText);\n}\n\nfunction currencyToNumber(value) {\n  if (value[0] === '$') {\n    return +value.slice(1).split(',').join('');\n  }\n\n  return isNaN(value) ? value : +value;\n}\n\nfunction sortTable(columnIndex) {\n  const rows = [...tbody.querySelectorAll('tr')];\n\n  rows.sort((row1, row2) => {\n    const value1 = getCellValue(row1, columnIndex);\n    const value2 = getCellValue(row2, columnIndex);\n\n    return typeof value1 === 'number'\n      ? (value1 - value2) * sortDirection\n      : value1.toString().localeCompare(value2.toString()) * sortDirection;\n  });\n\n  table.tBodies[0].append(...rows);\n}\n\nfunction createInputWithLabel(id, text, type = 'text', dataQa = id) {\n  const label = document.createElement('label');\n\n  label.innerHTML = `<span>${text}</span><input id=\"${id}\" type=\"${type}\" data-qa=\"${dataQa}\">`;\n\n  return label;\n}\n\nfunction pushNotification(title, description, type) {\n  const div = document.createElement('div');\n\n  div.classList.add('notification', type);\n\n  div.innerHTML = `<h2 class=\"title\">${title}</h2><p>${description}</p>`;\n  document.body.append(div);\n\n  setTimeout(() => div.remove(), 2000);\n}\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\nlet sortDirection = 1;\nlet lastSortedColumn = -1;\nlet editingCell = null;\n\ntable.querySelector('thead').addEventListener('click', (e) => {\n  const header = e.target.closest('th');\n\n  if (!header) {\n    return;\n  }\n\n  const index = [...headers].indexOf(header);\n\n  updateSortDirection(index);\n\n  sortTable(index);\n});\n\ntbody.addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n\n  if (!row) {\n    return;\n  }\n\n  tbody.querySelectorAll('tr').forEach((r) => r.classList.remove('active'));\n  row.classList.add('active');\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  const cell = e.target.closest('td');\n\n  if (!cell || editingCell) {\n    return;\n  }\n\n  editingCell = cell;\n\n  const initialValue = cell.innerText;\n\n  cell.innerHTML = '';\n\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.value = '';\n  cell.appendChild(input);\n\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    const newValue = input.value.trim() || initialValue;\n\n    cell.innerText = newValue;\n    editingCell = null;\n  });\n\n  input.addEventListener('keypress', (event1) => {\n    if (event1.key === 'Enter') {\n      const newValue = input.value.trim() || initialValue;\n\n      cell.innerText = newValue;\n      editingCell = null;\n    }\n  });\n});\n\nconst newForm = document.createElement('form');\n\nnewForm.className = 'new-employee-form';\ntable.insertAdjacentElement('afterend', newForm);\n\nconst selectLabel = document.createElement('label');\nconst selectHintText = document.createElement('span');\nconst select = document.createElement('select');\nconst selectOptions = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nselectLabel.setAttribute('for', 'office');\nselectHintText.textContent = 'Office:';\nselect.id = 'office';\nselect.setAttribute('data-qa', 'office');\n\nselectOptions.forEach((city) => {\n  const option = document.createElement('option');\n\n  option.value = city;\n  option.textContent = city;\n  select.appendChild(option);\n});\n\nselectLabel.append(selectHintText);\nselectLabel.append(select);\n\nconst button = document.createElement('button');\n\nbutton.textContent = 'Save to table';\nbutton.type = 'submit';\n\nnewForm.append(createInputWithLabel('name', 'Name:'));\nnewForm.append(createInputWithLabel('position', 'Position:'));\nnewForm.append(selectLabel);\nnewForm.append(createInputWithLabel('age', 'Age:', 'number'));\nnewForm.append(createInputWithLabel('salary', 'Salary:', 'number'));\nnewForm.append(button);\n\nnewForm.addEventListener('submit', (event2) => {\n  event2.preventDefault();\n\n  const employeeInfo = {\n    name: document.getElementById('name').value.trim(),\n    position: document.getElementById('position').value.trim(),\n    office: document.getElementById('office').value.trim(),\n    age: +document.getElementById('age').value.trim(),\n    salary: +document.getElementById('salary').value.trim(),\n  };\n\n  if (Object.values(employeeInfo).some((value) => !value)) {\n    pushNotification(\n      'Warning',\n      'All form fields must be filled in!',\n      'warning',\n    );\n\n    return;\n  }\n\n  if (employeeInfo.name.length < 4) {\n    pushNotification(\n      'Error',\n      'Name must be at least 4 characters long',\n      'error',\n    );\n\n    return;\n  }\n\n  if (employeeInfo.age < 18 || employeeInfo.age > 90) {\n    pushNotification('Error', 'Age must be between 18 and 90', 'error');\n\n    return;\n  }\n\n  const formattedSalary = `$${employeeInfo.salary.toLocaleString('en-US')}`;\n  const newRow = tbody.insertRow();\n\n  newRow.insertCell().textContent = employeeInfo.name;\n  newRow.insertCell().textContent = employeeInfo.position;\n  newRow.insertCell().textContent = employeeInfo.office;\n  newRow.insertCell().textContent = employeeInfo.age;\n  newRow.insertCell().textContent = formattedSalary;\n\n  pushNotification(\n    'Success',\n    'You have successfully added an employee to the table',\n    'success',\n  );\n\n  newForm.reset();\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","getCellValue","row","columnIndex","value","cells","innerText","split","join","isNaN","createInputWithLabel","id","text","type","arguments","dataQa","label","document","createElement","innerHTML","concat","pushNotification","title","description","div","classList","add","body","append","setTimeout","remove","table","querySelector","headers","querySelectorAll","tbody","sortDirection","lastSortedColumn","editingCell","addEventListener","e","header","target","closest","_table_tBodies_","rows","index","indexOf","sort","row1","row2","value1","value2","localeCompare","tBodies","apply","forEach","r","cell","initialValue","input","appendChild","focus","newValue","trim","event1","key","newForm","className","insertAdjacentElement","selectLabel","selectHintText","select","setAttribute","textContent","selectOptions","city","option","button","event2","preventDefault","employeeInfo","getElementById","position","office","age","salary","values","some","formattedSalary","toLocaleString","newRow","insertRow","insertCell","reset"],"version":3,"file":"index.04a2165b.js.map"}